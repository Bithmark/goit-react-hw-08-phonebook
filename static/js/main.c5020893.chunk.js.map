{"version":3,"sources":["components/Navigation/Navigation.module.css","views/LogIn.module.css","redux/auth/auth-selectors.js","redux/auth/auth-operations.js","components/Navigation/Navigation.jsx","components/Form/Form.styles.jsx","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","components/Form/Form.jsx","components/Filter/Filter.styles.jsx","redux/phonebook/phonebook-actions.js","components/Filter/Filter.jsx","components/Contacts/Contacts.styles.jsx","helpers/getFilteredContacts.js","components/Contacts/Contacts.jsx","views/Contacts.js","views/HomeView.js","views/LogIn.js","views/Register.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/phonebook/phonebook-reducers.js","redux/auth/auth-slices.js","redux/store.js","index.js"],"names":["module","exports","getLoggedIn","state","auth","isLoggedIn","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","console","log","message","logIn","logOut","getCurrentUser","_","thunkAPI","getState","persistedToken","rejectWithValue","get","Navigation","useSelector","dispatch","useDispatch","className","css","header","to","sliding_button","onClick","WrapperForm","Container","Input","InputTitle","fetchContacts","addContacts","contact","deleteContacts","contactId","delete","getContacts","phonebook","contacts","getFilter","filter","Form","form","useRef","useState","name","setName","number","setNumber","handleInputChange","event","currentTarget","value","useEffect","gsap","fromTo","x","opacity","ease","Power3","easeInOut","rotate","backgroundColor","resetForm","ref","el","onSubmit","preventDefault","some","alert","type","pattern","title","required","onChange","styles","InputFind","createAction","Filter","wrapper","e","target","ContactItem","BtnDelete","BtnText","NumberText","getVisibleContacts","normalizedFilter","toLowerCase","trim","includes","Contacts","map","id","size","HomeView","LogIn","email","setEmail","password","setPassword","handleChange","autoComplete","div","Register","PrivatRoute","Component","component","redirectTo","routeProps","isAuthenticate","render","props","isAuthenticated","restricted","App","path","exact","createReducer","fulfilled","action","payload","filterReducer","rootReducer","combineReducers","authReducer","createSlice","initialState","user","isFetchingCurrentUser","extraReducers","pending","rejected","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","configs","loading","document","getElementById"],"mappings":"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","file":"static/js/main.c5020893.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliding_button\":\"Navigation_sliding_button__3QYrp\",\"header\":\"Navigation_header__2ua9h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LogIn_form__dn4bB\",\"label\":\"LogIn_label__1pous\",\"sliding_button\":\"LogIn_sliding_button__1CM_D\",\"div\":\"LogIn_div__1kCri\",\"wrapper\":\"LogIn_wrapper__3QnjR\"};","export const getLoggedIn = state => state.auth.isLoggedIn;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const register = createAsyncThunk('auth/register', async credentials => {\n  try {\n    const { data } = await axios.post('/users/signup', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n});\n\nexport const logIn = createAsyncThunk('auth/login', async credentials => {\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n});\n\nexport const logOut = createAsyncThunk('auth/logout', async () => {\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nexport const getCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  },\n);\n","import { NavLink } from \"react-router-dom\";\nimport { getLoggedIn } from \"../../redux/auth/auth-selectors\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logOut } from \"../../redux/auth/auth-operations\";\n// import Button from \"@material-ui/core/Button\";\nimport css from \"./Navigation.module.css\";\n\nfunction Navigation() {\n  const isLoggedIn = useSelector(getLoggedIn);\n\n  const dispatch = useDispatch();\n\n  return (\n    <header className={css.header}>\n      <div>\n        <NavLink to=\"/\">\n          <button className={css.sliding_button}>Главная</button>\n        </NavLink>\n\n        {isLoggedIn && (\n          <NavLink to=\"/contacts\">\n            <button className={css.sliding_button}>Контакты</button>\n          </NavLink>\n        )}\n      </div>\n\n      {isLoggedIn ? (\n        <button\n          onClick={() => dispatch(logOut())}\n          className={css.sliding_button}\n        >\n          Logout\n        </button>\n      ) : (\n        <div>\n          <NavLink to=\"/login\">\n            <button className={css.sliding_button}>Логин</button>\n          </NavLink>\n\n          <NavLink to=\"/register\">\n            <button className={css.sliding_button}>Регистрация</button>\n          </NavLink>\n        </div>\n      )}\n    </header>\n  );\n}\n\nexport default Navigation;\n","import styled from '@emotion/styled/macro';\n\nexport const WrapperForm = styled.div`\n  margin-bottom: 20px;\n  padding: 20px;\n  box-shadow: 0px 1px 5px 1px rgba(34, 60, 80, 0.4);\n`;\n\nexport const BtnAdd = styled.button`\n  display: flex;\n  align-items: center;\n  padding: 7px;\n  border-color: transparent;\n  border-radius: 5px;\n  background-color: #c7cace;\n  text-transform: uppercase;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  &:hover {\n    background-color: #3561d0;\n    color: #fff;\n  }\n`;\n\nexport const BtnText = styled.span`\n  margin-right: 5px;\n`;\n\nexport const Container = styled.div`\n  margin-bottom: 15px;\n`;\n\nexport const Input = styled.input`\n  border-color: #a29f9f;\n  border-radius: 5px;\n  &:hover {\n    border-color: #0741d3;\n  }\n`;\n\nexport const InputTitle = styled.p`\n  margin-bottom: 10px;\n`;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async () => {\n    try {\n      const { data } = await axios.get('/contacts');\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  },\n);\n\nexport const addContacts = createAsyncThunk(\n  'contacts/addContacts',\n  async contact => {\n    try {\n      const { data } = await axios.post('/contacts', contact);\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  },\n);\n\nexport const deleteContacts = createAsyncThunk(\n  'contacts/deleteContacts',\n  async contactId => {\n    try {\n      await axios.delete(`/contacts/${contactId}`);\n      return contactId;\n    } catch (error) {\n      console.log(error.message);\n    }\n  },\n);\n","export const getContacts = state => state.phonebook.contacts;\n\nexport const getFilter = state => state.phonebook.filter;\n","import { useEffect, useState } from \"react\";\nimport {\n  WrapperForm,\n  // BtnAdd,\n  // BtnText,\n  Container,\n  Input,\n  InputTitle,\n} from \"./Form.styles\";\n// import { BsFillPersonPlusFill } from \"react-icons/bs\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContacts } from \"../../redux/phonebook/phonebook-operations\";\nimport { getContacts } from \"../../redux/phonebook/phonebook-selectors\";\nimport { gsap, Power3 } from \"gsap\";\nimport { useRef } from \"react\";\n// import { css } from \"@emotion/react\";\nimport styles from \"../../views/LogIn.module.css\";\n\nfunction Form() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  let form = useRef(null);\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  useEffect(() => {\n    gsap.fromTo(\n      form,\n      1,\n      {\n        x: -1800,\n        opacity: 0,\n        ease: Power3.easeInOut(),\n        rotate: 360,\n      },\n      {\n        x: 0,\n        opacity: 1,\n        backgroundColor: \"white\",\n        rotate: 720,\n      }\n    );\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (contacts.some((el) => el.name === name)) {\n      alert(` ${name} is already in contacts!`);\n      return;\n    }\n    dispatch(addContacts({ name, number }));\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <div>\n      <div ref={(el) => (form = el)}>\n        <WrapperForm>\n          <form onSubmit={handleSubmit}>\n            <Container>\n              <label>\n                <InputTitle>Name</InputTitle>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  value={name}\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. \n                        Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                  required\n                  onChange={handleInputChange}\n                />\n              </label>\n            </Container>\n\n            <Container>\n              <label>\n                <InputTitle>Number</InputTitle>\n                <Input\n                  type=\"tel\"\n                  name=\"number\"\n                  value={number}\n                  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                  title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, \n                        круглые скобки и может начинаться с +\"\n                  required\n                  onChange={handleInputChange}\n                />\n              </label>\n            </Container>\n\n            {/* <BtnAdd type=\"submit\"> */}\n            <button type=\"submit\" className={styles.sliding_button}>\n              Add contact\n            </button>\n          </form>\n        </WrapperForm>\n      </div>\n    </div>\n  );\n}\n\nexport default Form;\n","import styled from '@emotion/styled/macro';\n\nexport const ContactTitle = styled.h3`\nmargin-bottom: 10px;\n`;\n\nexport const InputFind = styled.input`\nmargin-bottom: 20px;\nborder-color: #a29f9f;\nborder-radius: 5px;\n\n&:hover {\n    border-color: #0741d3;\n}\n`;","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('phonebook/addContact');\n\nexport const deleteContact = createAction('phonebook/deleteContact');\n\nexport const filter = createAction('phonebook/filter');\n","import { InputFind } from \"./Filter.styles\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from \"../../redux/phonebook/phonebook-selectors\";\nimport { filter } from \"../../redux/phonebook/phonebook-actions\";\nimport css from \"../../views/LogIn.module.css\";\n\nfunction Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChange = (e) => {\n    dispatch(filter(e.target.value));\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <h6 className={css.sliding_button}>Find contacts by name</h6>\n      <InputFind type=\"text\" value={value} onChange={onChange} />\n    </div>\n  );\n}\n\nexport default Filter;\n","import styled from \"@emotion/styled/macro\";\n\nexport const ContactItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  list-style: none;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  background: #1d1b26;\n  text-decoration: none;\n  color: white;\n  display: inline-block;\n  position: relative;\n  padding: 15px 30px;\n  border: 1px solid;\n  border-image: linear-gradient(180deg, #ff3000, #ed0200, #ff096c, #d50082);\n  border-image-slice: 1;\n  margin: 10px 20px;\n  font-family: \"Montserrat\", sans-serif;\n  text-transform: uppercase;\n  overflow: hidden;\n  letter-spacing: 2px;\n  transition: 0.8s cubic-bezier(0.165, 0.84, 0.44, 1);\n  &:before {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    top: 0;\n    height: 0;\n    width: 100%;\n    z-index: -1;\n    color: white;\n    background: linear-gradient(180deg, #ff3000, #ed0200, #ff096c, #d50082);\n    transition: 0.8s cubic-bezier(0.165, 0.84, 0.44, 1);\n  }\n  &:hover {\n    background: rgba(255, 255, 255, 0);\n  }\n  &:hover:before {\n    bottom: 0%;\n    top: auto;\n    height: 100%;\n  }\n`;\n\nexport const BtnDelete = styled.button`\n  display: inline-flex;\n  align-items: center;\n  padding: 5px;\n  border-color: transparent;\n  border-radius: 5px;\n  background-color: #c7cace;\n  text-transform: uppercase;\n  cursor: pointer;\n  background-color: aqua;\n`;\n\nexport const BtnText = styled.span`\n  /* padding: 10px;\n  color: black;\n  cursor: pointer; */\n`;\n\nexport const NumberText = styled.span`\n  margin-right: 30px;\n  margin-left: 10px;\n`;\n","export const getVisibleContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase().trim();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import { ContactItem, BtnText, BtnDelete, NumberText } from \"./Contacts.styles\";\nimport { BsFillPersonDashFill } from \"react-icons/bs\";\nimport { BiWinkSmile } from \"react-icons/bi\";\nimport styles from \"../../views/LogIn.module.css\";\nimport {\n  getContacts,\n  getFilter,\n} from \"../../redux/phonebook/phonebook-selectors\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getVisibleContacts } from \"../../helpers/getFilteredContacts\";\n\nimport {\n  fetchContacts,\n  deleteContacts,\n} from \"../../redux/phonebook/phonebook-operations\";\n// import { css } from \"@emotion/react\";\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const data = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className={styles.wrapper}>\n      {data &&\n        getVisibleContacts(data, filter).map(({ id, name, number }) => {\n          return (\n            <ContactItem key={id}>\n              <BiWinkSmile size={18} />\n              {name}:<NumberText>{number}</NumberText>\n              <BtnDelete\n                type=\"button\"\n                onClick={() => dispatch(deleteContacts(id))}\n              >\n                <BtnText>Delete</BtnText>\n                <BsFillPersonDashFill size={16} />\n              </BtnDelete>\n            </ContactItem>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default Contacts;\n","import Form from \"../components/Form/Form\";\nimport Filter from \"../components/Filter/Filter\";\nimport ContactsView from \"../components/Contacts/Contacts\";\n// import Section from \"../components/Section/Section\";\nimport css from \"./LogIn.module.css\";\n\nfunction Contacts() {\n  return (\n    <div className={css.wrapper}>\n      <h5 className={css.sliding_button}>Phonebook </h5>\n      {/* <Section title=\"Phonebook\" className={css.sliding_button}> */}\n      <Form />\n      {/* </Section> */}\n      <h5 className={css.sliding_button}>Contacts </h5>\n      {/* <Section title=\"Contacts\"> */}\n      <Filter />\n      <ContactsView />\n      {/* </Section> */}\n    </div>\n  );\n}\n\nexport default Contacts;\n","import React from 'react';\n\nfunction HomeView() {\n  return <div></div>;\n}\n\nexport default HomeView;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { logIn } from \"../redux/auth/auth-operations\";\nimport styles from \"./LogIn.module.css\";\n\nfunction LogIn() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case \"email\":\n        return setEmail(value);\n      case \"password\":\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(logIn({ email, password }));\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className={styles.form} autoComplete=\"off\">\n        <label className={styles.sliding_button}>\n          Почта\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label className={styles.sliding_button}>\n          Пароль\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n        <div className={styles.div}>\n          <button className={styles.sliding_button} type=\"submit\">\n            Войти\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default LogIn;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"../redux/auth/auth-operations\";\nimport styles from \"./LogIn.module.css\";\n\nfunction Register() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case \"name\":\n        return setName(value);\n      case \"email\":\n        return setEmail(value);\n      case \"password\":\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(register({ name, email, password }));\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className={styles.form} autoComplete=\"off\">\n        <label className={styles.sliding_button}>\n          Имя\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n        </label>\n\n        <label className={styles.sliding_button}>\n          Почта\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label className={styles.sliding_button}>\n          Пароль\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n        <div className={styles.div}>\n          <button className={styles.sliding_button} type=\"submit\">\n            Зарегистрироваться\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Register;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getLoggedIn } from '../redux/auth/auth-selectors';\nimport { useSelector } from 'react-redux';\n\nexport default function PrivatRoute({\n  component: Component,\n  redirectTo,\n  ...routeProps\n}) {\n  const isAuthenticate = useSelector(getLoggedIn);\n  return (\n    <Route\n      {...routeProps}\n      render={props =>\n        isAuthenticate ? <Component {...props} /> : <Redirect to={redirectTo} />\n      }\n    />\n  );\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getLoggedIn } from '../redux/auth/auth-selectors';\n\nexport default function PrivatRoute({\n  component: Component,\n  redirectTo,\n  ...routeProps\n}) {\n  const isAuthenticated = useSelector(getLoggedIn);\n  return (\n    <Route\n      {...routeProps}\n      render={props =>\n        isAuthenticated && routeProps.restricted ? (\n          <Redirect to={redirectTo} />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n}\n","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport Navigation from \"./components/Navigation/Navigation\";\nimport { Switch } from \"react-router-dom\";\n\nimport Contacts from \"./views/Contacts\";\nimport HomeView from \"./views/HomeView\";\nimport LogIn from \"./views/LogIn\";\nimport Register from \"./views/Register\";\n\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport PublicRoute from \"./components/PublicRoute\";\nimport { getCurrentUser } from \"./redux/auth/auth-operations\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Navigation />\n      <Switch>\n        <PublicRoute path=\"/\" exact component={HomeView} />\n        <PrivateRoute\n          path=\"/contacts\"\n          redirectTo=\"/login\"\n          component={Contacts}\n        />\n        <PublicRoute\n          restricted\n          path=\"/login\"\n          redirectTo=\"/contacts\"\n          component={LogIn}\n        />\n        <PublicRoute\n          redirectTo=\"/contacts\"\n          restricted\n          path=\"/register\"\n          exact\n          component={Register}\n        />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport { filter } from '../phonebook/phonebook-actions';\nimport {\n  fetchContacts,\n  addContacts,\n  deleteContacts,\n} from './phonebook-operations';\n\nconst contacts = createReducer([], {\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\n  [addContacts.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContacts.fulfilled]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [filter]: (_, { payload }) => payload,\n});\n\nexport const rootReducer = combineReducers({\n  contacts,\n  filter: filterReducer,\n});\n","import { createSlice } from '@reduxjs/toolkit';\nimport { register, logIn, logOut, getCurrentUser } from './auth-operations';\n\nconst authReducer = createSlice({\n  name: 'auth',\n  initialState: {\n    user: {\n      name: null,\n      email: null,\n    },\n    token: null,\n    isLoggedIn: false,\n    isFetchingCurrentUser: false,\n  },\n  extraReducers: {\n    [register.fulfilled]: (state, { payload }) => ({\n      ...state,\n      isLoggedIn: true,\n      user: payload.user,\n      token: payload.token,\n    }),\n    [logIn.fulfilled]: (state, { payload }) => ({\n      ...state,\n      isLoggedIn: true,\n      user: payload.user,\n      token: payload.token,\n    }),\n    [logOut.fulfilled]: state => ({\n      ...state,\n      isLoggedIn: false,\n      user: { name: null, email: null },\n      token: null,\n    }),\n    [getCurrentUser.fulfilled]: (state, { payload }) => ({\n      ...state,\n      user: payload.user,\n      isLoggedIn: true,\n      isFetchingCurrentUser: false,\n    }),\n    [getCurrentUser.pending]: state => ({\n      ...state,\n      isFetchingCurrentUser: true,\n    }),\n    [getCurrentUser.rejected]: state => ({\n      ...state,\n      isFetchingCurrentUser: false,\n    }),\n  },\n});\n\nexport default authReducer.reducer;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport { rootReducer } from \"./phonebook/phonebook-reducers\";\n//import { phonebookApi } from '../redux/rtk-phonebook/phonebook-api';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport authReducer from \"../redux/auth/auth-slices\";\n//import { filterReducer } from '../redux/rtk-phonebook/filterReducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: \"token\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    //[phonebookApi.reducerPath]: phonebookApi.reducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n    phonebook: rootReducer,\n    //filter: filterReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV !== \"production\",\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport configs from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configs.store}>\n      <PersistGate loading={null} persistor={configs.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}